{"version":3,"sources":["components/events/Event.js","actions/eventActions.js","actions/types.js","components/events/Events.js","components/layout/TextInputGroup.js","components/events/AddEvent.js","components/events/EditEvent.js","components/layout/Header.js","components/pages/About.js","components/pages/Notfound.js","reducers/eventReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["Event","state","showEventInfo","onDeleteClick","id","props","deleteEvent","this","event","name","storyline","release","className","onClick","setState","style","cursor","float","color","bind","to","marginRight","Component","connect","dispatch","a","axios","delete","type","payload","Events","getEvents","events","Fragment","map","key","get","res","data","TextInputGroup","label","value","placeholder","onChange","error","htmlFor","classnames","defaultProps","AddEvent","errors","onSubmit","e","preventDefault","newEvent","addEvent","history","push","target","post","EditEvent","updEvent","match","params","updateEvent","nextProps","nextState","getEvent","put","Header","branding","href","initialState","combineReducers","action","filter","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","App","exact","path","component","About","Notfound","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.36aff6bd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteEvent } from \"../../actions/eventActions\";\r\n\r\nclass Event extends Component {\r\n  state = {\r\n    showEventInfo: false,\r\n  };\r\n\r\n  onDeleteClick = (id) => {\r\n    //// DELETE EVENT ////\r\n    this.props.deleteEvent(id);\r\n  };\r\n\r\n  render() {\r\n    const { id, name, storyline, release } = this.props.event;\r\n    const { showEventInfo } = this.state;\r\n\r\n    return (\r\n      <div className=\"card card-body mb-3\">\r\n        <h4>\r\n          {name}{\" \"}\r\n          <i\r\n            onClick={() =>\r\n              this.setState({\r\n                showEventInfo: !this.state.showEventInfo,\r\n              })\r\n            }\r\n            className=\"fas fa-sort-down\"\r\n            style={{ cursor: \"pointer\" }}\r\n          />\r\n          <i\r\n            className=\"fas fa-times\"\r\n            style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n            onClick={this.onDeleteClick.bind(this, id)}\r\n          />\r\n          <Link to={`event/edit/${id}`}>\r\n            <i\r\n              className=\"fas fa-pencil-alt\"\r\n              style={{\r\n                cursor: \"pointer\",\r\n                float: \"right\",\r\n                color: \"black\",\r\n                marginRight: \"1rem\",\r\n              }}\r\n            />\r\n          </Link>\r\n        </h4>\r\n        {showEventInfo ? (\r\n          <ul className=\"list-group\">\r\n            <li className=\"list-group-item\">Storyline: {storyline}</li>\r\n            <li className=\"list-group-item\">Release: {release}</li>\r\n          </ul>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nEvent.propTypes = {\r\n  event: PropTypes.object.isRequired,\r\n  deleteEvent: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteEvent })(Event);\r\n","import {\r\n  GET_EVENTS,\r\n  DELETE_EVENT,\r\n  ADD_EVENT,\r\n  GET_EVENT,\r\n  UPDATE_EVENT,\r\n} from \"./types\";\r\nimport axios from \"axios\";\r\n\r\nexport const getEvents = () => async (dispatch) => {\r\n  const res = await axios.get(\r\n    \"https://my-json-server.typicode.com/ShrutiSemwal/eventsdata/events\"\r\n  );\r\n\r\n  dispatch({\r\n    type: GET_EVENTS,\r\n    payload: res.data,\r\n  });\r\n};\r\n\r\nexport const getEvent = (id) => async (dispatch) => {\r\n  const res = await axios.get(\r\n    `https://my-json-server.typicode.com/ShrutiSemwal/eventsdata/events/${id}`\r\n  );\r\n\r\n  dispatch({\r\n    type: GET_EVENT,\r\n    payload: res.data,\r\n  });\r\n};\r\n\r\nexport const deleteEvent = (id) => async (dispatch) => {\r\n  try {\r\n    await axios.delete(\r\n      `https://my-json-server.typicode.com/ShrutiSemwal/eventsdata/events/${id}`\r\n    );\r\n    dispatch({\r\n      type: DELETE_EVENT,\r\n      payload: id,\r\n    });\r\n  } catch (e) {\r\n    dispatch({\r\n      type: DELETE_EVENT,\r\n      payload: id,\r\n    });\r\n  }\r\n};\r\n\r\nexport const addEvent = (event) => async (dispatch) => {\r\n  const res = await axios.post(\r\n    \"https://my-json-server.typicode.com/ShrutiSemwal/eventsdata/events\",\r\n    event\r\n  );\r\n\r\n  dispatch({\r\n    type: ADD_EVENT,\r\n    payload: res.data,\r\n  });\r\n};\r\n\r\nexport const updateEvent = (event) => async (dispatch) => {\r\n  const res = await axios.put(\r\n    `https://my-json-server.typicode.com/ShrutiSemwal/eventsdata/events/${event.id}`,\r\n    event\r\n  );\r\n\r\n  dispatch({\r\n    type: UPDATE_EVENT,\r\n    payload: res.data,\r\n  });\r\n};\r\n","export const GET_EVENTS = \"GET_EVENTS\";\r\nexport const DELETE_EVENT = \"DELETE_EVENT\";\r\nexport const ADD_EVENT = \"ADD_EVENT\";\r\nexport const GET_EVENT = \"GET_EVENT\";\r\nexport const UPDATE_EVENT = \"UPDATE_EVENT\";\r\n","import React, { Component } from \"react\";\r\nimport Event from \"./Event\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getEvents } from \"../../actions/eventActions\";\r\n\r\nclass Events extends Component {\r\n  componentDidMount() {\r\n    this.props.getEvents();\r\n  }\r\n\r\n  render() {\r\n    const { events } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <h1 className=\"display-4 mb-2\">\r\n          <span className=\"text-danger\">Upcoming Events</span> List\r\n        </h1>\r\n        {events.map((event) => (\r\n          <Event key={event.id} event={event} />\r\n        ))}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nEvents.propTypes = {\r\n  events: PropTypes.array.isRequired,\r\n  getEvents: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  events: state.event.events,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getEvents })(Events);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error,\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error,\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\",\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addEvent } from \"../../actions/eventActions\";\r\n\r\nclass AddEvent extends Component {\r\n  state = {\r\n    name: \"\",\r\n    storyline: \"\",\r\n    release: \"\",\r\n    errors: {},\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, storyline, release } = this.state;\r\n\r\n    // Check For Errors\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (storyline === \"\") {\r\n      this.setState({ errors: { storyline: \"Storyline is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (release === \"\") {\r\n      this.setState({ errors: { release: \"Release  is required\" } });\r\n      return;\r\n    }\r\n\r\n    const newEvent = {\r\n      name,\r\n      storyline,\r\n      release,\r\n    };\r\n\r\n    this.props.addEvent(newEvent);\r\n\r\n    //// SUBMIT EVENT ////\r\n\r\n    // Clear State\r\n    this.setState({\r\n      name: \"\",\r\n      storyline: \"\",\r\n      release: \"\",\r\n      errors: {},\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, storyline, release, errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"card mb-3\">\r\n        <div className=\"card-header\">Add Event</div>\r\n        <div className=\"card-body\">\r\n          <form onSubmit={this.onSubmit}>\r\n            <TextInputGroup\r\n              label=\"Name\"\r\n              name=\"name\"\r\n              placeholder=\"Enter Name\"\r\n              value={name}\r\n              onChange={this.onChange}\r\n              error={errors.name}\r\n            />\r\n            <TextInputGroup\r\n              label=\"Storyline\"\r\n              name=\"storyline\"\r\n              placeholder=\"Enter Storyline\"\r\n              value={storyline}\r\n              onChange={this.onChange}\r\n              error={errors.storyline}\r\n            />\r\n            <TextInputGroup\r\n              label=\"Release\"\r\n              name=\"release\"\r\n              placeholder=\"Enter Release\"\r\n              value={release}\r\n              onChange={this.onChange}\r\n              error={errors.release}\r\n            />\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Add Event\"\r\n              className=\"btn btn-light btn-block\"\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddEvent.propTypes = {\r\n  addEvent: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addEvent })(AddEvent);\r\n","import React, { Component } from \"react\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getEvent, updateEvent } from \"../../actions/eventActions\";\r\n\r\nclass EditEvent extends Component {\r\n  state = {\r\n    name: \"\",\r\n    storyline: \"\",\r\n    release: \"\",\r\n    errors: {},\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps, nextState) {\r\n    const { name, storyline, release } = nextProps.event;\r\n    this.setState({\r\n      name,\r\n      storyline,\r\n      release,\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getEvent(id);\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, storyline, release } = this.state;\r\n\r\n    // Check For Errors\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (storyline === \"\") {\r\n      this.setState({ errors: { storyline: \"Storyline is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (release === \"\") {\r\n      this.setState({ errors: { release: \"Release is required\" } });\r\n      return;\r\n    }\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const updEvent = {\r\n      id,\r\n      name,\r\n      storyline,\r\n      release,\r\n    };\r\n\r\n    //// UPDATE EVENT ////\r\n    this.props.updateEvent(updEvent);\r\n\r\n    // Clear State\r\n    this.setState({\r\n      name: \"\",\r\n      storyline: \"\",\r\n      release: \"\",\r\n      errors: {},\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, storyline, release, errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"card mb-3\">\r\n        <div className=\"card-header\">Edit Event</div>\r\n        <div className=\"card-body\">\r\n          <form onSubmit={this.onSubmit}>\r\n            <TextInputGroup\r\n              label=\"Name\"\r\n              name=\"name\"\r\n              placeholder=\"Enter Name\"\r\n              value={name}\r\n              onChange={this.onChange}\r\n              error={errors.name}\r\n            />\r\n            <TextInputGroup\r\n              label=\"Storyline\"\r\n              name=\"storyline\"\r\n              placeholder=\"Enter Storyline\"\r\n              value={storyline}\r\n              onChange={this.onChange}\r\n              error={errors.storyline}\r\n            />\r\n            <TextInputGroup\r\n              label=\"Release\"\r\n              name=\"release\"\r\n              placeholder=\"Enter Release\"\r\n              value={release}\r\n              onChange={this.onChange}\r\n              error={errors.release}\r\n            />\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Update Event\"\r\n              className=\"btn btn-light btn-block\"\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nEditEvent.propTypes = {\r\n  event: PropTypes.object.isRequired,\r\n  getEvent: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  event: state.event.event,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getEvent, updateEvent })(EditEvent);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\" /> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/event/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\" /> Add Event\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\" /> About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"My App\",\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Find My Event</h1>\r\n      <p className=\"lead\">Simple app to manage events </p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404</span> Page Not Found\r\n      </h1>\r\n      <p className=\"lead\">Sorry, that page does not exist</p>\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n  GET_EVENTS,\r\n  DELETE_EVENT,\r\n  ADD_EVENT,\r\n  GET_EVENT,\r\n  UPDATE_EVENT,\r\n} from \"../actions/types\";\r\nimport Event from \"../components/events/Event\";\r\n\r\nconst initialState = {\r\n  events: [],\r\n  event: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_EVENTS:\r\n      return {\r\n        ...state,\r\n        events: action.payload,\r\n      };\r\n    case GET_EVENT:\r\n      return {\r\n        ...state,\r\n        event: action.payload,\r\n      };\r\n\r\n    case DELETE_EVENT:\r\n      return {\r\n        ...state,\r\n        events: state.events.filter((event) => event.id !== action.payload),\r\n      };\r\n\r\n    case ADD_EVENT:\r\n      return {\r\n        ...state,\r\n        events: [action.payload, ...state.events],\r\n      };\r\n\r\n    case UPDATE_EVENT:\r\n      return {\r\n        ...state,\r\n        events: state.events.map((event) =>\r\n          event.id === action.payload.id ? (event = action.payload) : event\r\n        ),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport eventReducer from \"./eventReducer\";\r\n\r\nexport default combineReducers({\r\n  event: eventReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Events from \"./components/events/Events\";\nimport AddEvent from \"./components/events/AddEvent\";\nimport EditEvent from \"./components/events/EditEvent\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport Notfound from \"./components/pages/Notfound\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Find My Event\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Events} />\n                <Route exact path=\"/event/add\" component={AddEvent} />\n                <Route exact path=\"/event/edit/:id\" component={EditEvent} />\n                <Route exact path=\"/about\" component={About} />\n                <Route component={Notfound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}